plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "7.3.0"
    id 'jacoco'
    id "com.adarshr.test-logger" version "1.2.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.jetbrains:annotations:19.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'org.springframework', name: 'spring-web', version: '5.3.1'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompile 'com.h2database:h2'
    runtime 'org.postgresql:postgresql'
    implementation 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-core:1.10.19'
    compile 'org.flywaydb:flyway-core:7.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:auth0-spring-security-api:1.4.0'
    compile 'com.auth0:java-jwt:3.4.0'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'user'
    password = 'password'
    locations = ['classpath:db/migration']
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile){
        options.compilerArgs << "-Xlint:deprecation"
    }
}

configurations {
    flywayMigration
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

testlogger {
    theme 'mocha'
    showExceptions true
    slowThreshold 1000
    showSummary true
    showStandardStreams false
}

